(()=>{"use strict";var e={772:(e,t,n)=>{n.d(t,{Z:()=>s});var a=n(537),r=n.n(a),o=n(645),i=n.n(o)()(r());i.push([e.id,"* {\n  box-sizing: border-box;\n}\n\n#content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n}\n\n.board-container {\n  display: grid;\n  grid-template-rows: 25px 250px;\n  grid-template-columns: 25px 250px;\n}\n\n.board {\n  display: grid;\n  grid-template-rows: repeat(10, 25px);\n  grid-template-columns: repeat(10, 25px);\n  margin-bottom: 20px;\n  grid-row: 2;\n  grid-column: 2;\n}\n\n.board-tile {\n  border: 1px solid black;\n}\n\n.player-ship {\n  background-color: green;\n}\n\n.hit {\n  background-color: red;\n}\n\n.miss {\n  background-color: aqua;\n}\n\n.game-over-screen {\n  position: absolute;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  width: 100vw;\n  height: 100vh;\n  z-index: 1;\n  background-color: silver;\n  border: 3px solid black;\n}\n\n.x-axis div,\n.y-axis div {\n  border: 1px solid black;\n  text-align: center;\n  height: 25px;\n  width: 25px;\n}\n\n.x-axis {\n  display: grid;\n  grid-template-columns: repeat(10, 25px);\n  grid-row: 1;\n  grid-column: 2;\n}\n\n.y-axis {\n  grid-template-rows: repeat(10, 25px);\n  width: 25px;\n  grid-row: 2;\n  grid-column: 1;\n}/*# sourceMappingURL=styles.css.map */","",{version:3,sources:["webpack://./src/styles/styles.scss","webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,sBAAA;ACCF;;ADCA;EACE,aAAA;EACA,sBAAA;EACA,uBAAA;EACA,mBAAA;ACEF;;ADAA;EACE,aAAA;EACA,8BAAA;EACA,iCAAA;ACGF;;ADDA;EACE,aAAA;EACA,oCAAA;EAEA,uCAAA;EAEA,mBAAA;EACA,WAAA;EACA,cAAA;ACEF;;ADAA;EACE,uBAAA;ACGF;;ADAA;EACE,uBAAA;ACGF;;ADDA;EACE,qBAAA;ACIF;;ADFA;EACE,sBAAA;ACKF;;ADFA;EACE,kBAAA;EACA,aAAA;EACA,uBAAA;EACA,mBAAA;EACA,sBAAA;EACA,YAAA;EACA,aAAA;EAEA,UAAA;EACA,wBAAA;EACA,uBAAA;ACIF;;ADFA;;EAEE,uBAAA;EACA,kBAAA;EACA,YAAA;EACA,WAAA;ACKF;;ADHA;EACE,aAAA;EACA,uCAAA;EACA,WAAA;EACA,cAAA;ACMF;;ADJA;EACE,oCAAA;EACA,WAAA;EACA,WAAA;EACA,cAAA;ACOF,CAAA,qCAAA",sourceRoot:""}]);const s=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",a=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),a&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),a&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,a,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(a)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var d=0;d<e.length;d++){var A=[].concat(e[d]);a&&i[A[0]]||(void 0!==o&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=o),n&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=n):A[2]=n),r&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=r):A[4]="".concat(r)),t.push(A))}},t}},537:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),i=n.sources.map((function(e){return"/*# sourceURL=".concat(n.sourceRoot||"").concat(e," */")}));return[t].concat(i).concat([o]).join("\n")}return[t].join("\n")}},379:e=>{var t=[];function n(e){for(var n=-1,a=0;a<t.length;a++)if(t[a].identifier===e){n=a;break}return n}function a(e,a){for(var o={},i=[],s=0;s<e.length;s++){var c=e[s],d=a.base?c[0]+a.base:c[0],A=o[d]||0,l="".concat(d," ").concat(A);o[d]=A+1;var u=n(l),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==u)t[u].references++,t[u].updater(p);else{var m=r(p,a);a.byIndex=s,t.splice(s,0,{identifier:l,updater:m,references:1})}i.push(l)}return i}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=a(e=e||[],r=r||{});return function(e){e=e||[];for(var i=0;i<o.length;i++){var s=n(o[i]);t[s].references--}for(var c=a(e,r),d=0;d<o.length;d++){var A=n(o[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}o=c}}},569:e=>{var t={};e.exports=function(e,n){var a=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(n)}},216:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:e=>{e.exports=function(e){var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var a="";n.supports&&(a+="@supports (".concat(n.supports,") {")),n.media&&(a+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(a+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),a+=n.css,r&&(a+="}"),n.media&&(a+="}"),n.supports&&(a+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(a,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(a){var r=t[a];if(void 0!==r)return r.exports;var o=t[a]={id:a,exports:{}};return e[a](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var a in t)n.o(t,a)&&!n.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:t[a]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0,(()=>{var e=n(379),t=n.n(e),a=n(795),r=n.n(a),o=n(569),i=n.n(o),s=n(565),c=n.n(s),d=n(216),A=n.n(d),l=n(589),u=n.n(l),p=n(772),m={};m.styleTagTransform=u(),m.setAttributes=c(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=A(),t()(p.Z,m),p.Z&&p.Z.locals&&p.Z.locals;const h=function(e){return{location:e,length:e.length,timesHit:0,sunk:!1,hit:function(){this.timesHit=this.timesHit+1,this.timesHit!==this.length||this.isSunk()},isSunk:function(){return this.sunk=!0,!0}}},f=function(e,t){let n=function(e){let t=[];for(let e=0;e<100;e++)t.push(e);let n=e,a=[];return{loss:!1,board:t,ships:n,usedAttacks:a,placeShip:function(){},checkLoss:function(){0===this.ships.length&&(this.loss=!0)},receiveAttack:function(e){a.find((t=>t===e));let t=a.length;n.forEach((t=>{t.location.forEach((n=>{n===e&&(t.hit(),this.usedAttacks.push({index:e,status:"hit"})),!0===t.sunk&&(this.ships=this.ships.filter((e=>!e.sunk)),this.checkLoss())}))})),a.length===t&&this.usedAttacks.push({index:e,status:"miss"})}}}(t),a=[];for(let e=0;e<100;e++)a.push(e);return function(e){for(var t=e.length-1;t>0;t--){var n=Math.floor(Math.random()*(t+1)),a=e[t];e[t]=e[n],e[n]=a}}(a),{cpuAttacks:a,gameBoard:n,type:e,attack:function(e,t){t.gameBoard.receiveAttack(e)},cpuAttack:function(e){let t=this.cpuAttacks.shift();return e.gameBoard.receiveAttack(t),t}}},C={generateDom:function(e,t){let n=document.querySelector("#content"),a=document.createElement("h1");a.textContent="opponent";let r=document.createElement("h1");r.textContent="player";let o=document.createElement("div");o.classList.add("board");let i=document.createElement("div");i.classList.add("board");let s=document.createElement("div");s.classList.add("board-container");let c=document.createElement("div");c.classList.add("board-container");let d=document.createElement("div");d.classList.add("x-axis");let A=document.createElement("div");A.classList.add("y-axis");let l=document.createElement("div");l.classList.add("x-axis");let u=document.createElement("div");u.classList.add("y-axis");for(let e=0;e<10;e++){let t=document.createElement("div");t.textContent=e,d.appendChild(t)}for(let e=0;e<10;e++){let t=document.createElement("div");t.textContent=String.fromCharCode(e+65),A.appendChild(t)}for(let e=0;e<10;e++){let t=document.createElement("div");t.textContent=e,l.appendChild(t)}for(let e=0;e<10;e++){let t=document.createElement("div");t.textContent=String.fromCharCode(e+65),u.appendChild(t)}for(let a=0;a<100;a++){let r=document.createElement("button");r.classList.add("board-tile","neutral"),r.dataset.tileNumber=a,r.addEventListener("click",(r=>{e.attack(a,t);let o=t.gameBoard.usedAttacks.find((e=>e.index===a));r.target.classList.add(o.status);let i=t.cpuAttack(e),s=e.gameBoard.usedAttacks.find((e=>e.index===i));if(document.querySelectorAll(".player-tile").forEach((e=>{e.dataset.tileNumber==s.index&&e.classList.add(s.status)})),t.gameBoard.loss){let e=document.createElement("div");e.classList.add("game-over-screen");let t=document.createElement("h2");t.textContent="You Win";let a=document.createElement("button");a.textContent="Play Again",a.addEventListener("click",(()=>{location.reload()})),e.appendChild(t),e.appendChild(a),n.appendChild(e)}if(e.gameBoard.loss){let e=document.createElement("div");e.classList.add("game-over-screen");let t=document.createElement("h2");t.textContent="You Win";let a=document.createElement("button");a.textContent="Play Again",a.addEventListener("click",(()=>{location.reload()})),e.appendChild(t),e.appendChild(a),n.appendChild(e)}}),{once:!0}),o.appendChild(r)}for(let t=0;t<100;t++){let n=document.createElement("button");n.classList.add("board-tile","neutral","player-tile"),n.dataset.tileNumber=t,e.gameBoard.ships.forEach((e=>{e.location.forEach((e=>{e==t&&n.classList.add("player-ship")}))})),i.appendChild(n)}s.appendChild(d),s.appendChild(A),s.appendChild(o),c.appendChild(l),c.appendChild(u),c.appendChild(i),n.appendChild(a),n.appendChild(s),n.appendChild(r),n.appendChild(c)}},E=C;!function(){const e=[h([62,72]),h([52,53,54]),h([35,45,55]),h([1,2,3,4]),h([91,92,93,94,95])],t=[h([62,72]),h([52,53,54]),h([35,45,55]),h([1,2,3,4]),h([91,92,93,94,95])],n=f("player",e),a=f("cpu",t);E.generateDom(n,a)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,